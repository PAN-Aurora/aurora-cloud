server:
  port: 2000
spring:
    application:
        name: aurora-jpa
    cloud:
        inetutils:
          default-ip-address:  127.0.0.1

    # 配置数据源
    datasource:
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/aurora-cloud?useUnicode=true&characterEncoding=utf-8
        username: root
        password:
        type: com.alibaba.druid.pool.DruidDataSource
        #数据库参数配置
         #初始化数量
        initialSize: 1
        #最小连接
        minIdle: 1
        #最大活跃数
        maxActive: 20
        #最大连接等待超时时间
        maxWait: 60000
        #打开PSCache，并且指定每个连接PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        #通过connectionProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
       # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000

        # 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
        validationQuery: select 1 from dual
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        #配置监控统计拦截的filters，去掉后监控界面sql将无法统计,'wall'用于防火墙
        filters: stat, wall, log4j
        # 合并多个DruidDataSource的监控数据
        useGlobalDataSourceStat: true
####jpa 配置 使用 hibernate 数据库mysql
    jpa:
        ##配置数据库类型和方言
        database: MySQL
        database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
        ##是否显示sql语句
        show-sql: true
        hibernate:
        ## create create-drop   update validate
          ddl-auto: update
        ##sql语句格式化
        properties:
              hibenate:
                format_sql: true
#开启自动部署
devtools:
  restart:
    enabled: true
## eureka 客户端配置
eureka:
  instance:
    hostname:  ${spring.cloud.inetutils.default-ip-address}
    ##以ip注册到注册中心
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.inetutils.default-ip-address}:${server.port}
  client:
    serviceUrl:
      defaultZone: http://${spring.cloud.inetutils.default-ip-address}:8671/eureka/





